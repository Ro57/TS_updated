// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/discredit/discredit.proto

package discredit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	token "token-strike/tsp2p/token"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DuplicateBlock 2 identical blocks were generated (Updated the structure)
type DuplicateBlock struct {
	// first_block_header — copied block
	FirstBlockHeader *token.Block `protobuf:"bytes,1,opt,name=first_block_header,json=firstBlockHeader,proto3" json:"first_block_header,omitempty"`
	// second_block_header — block copy
	SecondBlockHeader    *token.Block `protobuf:"bytes,2,opt,name=second_block_header,json=secondBlockHeader,proto3" json:"second_block_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DuplicateBlock) Reset()         { *m = DuplicateBlock{} }
func (m *DuplicateBlock) String() string { return proto.CompactTextString(m) }
func (*DuplicateBlock) ProtoMessage()    {}
func (*DuplicateBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d7938a26e59d63d, []int{0}
}

func (m *DuplicateBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DuplicateBlock.Unmarshal(m, b)
}
func (m *DuplicateBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DuplicateBlock.Marshal(b, m, deterministic)
}
func (m *DuplicateBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DuplicateBlock.Merge(m, src)
}
func (m *DuplicateBlock) XXX_Size() int {
	return xxx_messageInfo_DuplicateBlock.Size(m)
}
func (m *DuplicateBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_DuplicateBlock.DiscardUnknown(m)
}

var xxx_messageInfo_DuplicateBlock proto.InternalMessageInfo

func (m *DuplicateBlock) GetFirstBlockHeader() *token.Block {
	if m != nil {
		return m.FirstBlockHeader
	}
	return nil
}

func (m *DuplicateBlock) GetSecondBlockHeader() *token.Block {
	if m != nil {
		return m.SecondBlockHeader
	}
	return nil
}

// DenialService the issuer accepts a lock_tokens request from a sender but
// then ignores the transfer_tokens request from the recipient
type DenialService struct {
	// lock — hash of ignored lock
	Lock string `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	// htlc_secret — htlc genereted issuer
	HtlcSecret string `protobuf:"bytes,2,opt,name=htlc_secret,json=htlcSecret,proto3" json:"htlc_secret,omitempty"`
	// proof_mercle_branch — proof from PKT blockchain
	ProofMercleBranch string `protobuf:"bytes,3,opt,name=proof_mercle_branch,json=proofMercleBranch,proto3" json:"proof_mercle_branch,omitempty"`
	// creation_height — height of the block on create lock
	CreationHeight uint64 `protobuf:"varint,4,opt,name=creation_height,json=creationHeight,proto3" json:"creation_height,omitempty"`
	// lock_expire — pkt block on which has expired lock
	LockExpire           uint64   `protobuf:"varint,5,opt,name=lock_expire,json=lockExpire,proto3" json:"lock_expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DenialService) Reset()         { *m = DenialService{} }
func (m *DenialService) String() string { return proto.CompactTextString(m) }
func (*DenialService) ProtoMessage()    {}
func (*DenialService) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d7938a26e59d63d, []int{1}
}

func (m *DenialService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DenialService.Unmarshal(m, b)
}
func (m *DenialService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DenialService.Marshal(b, m, deterministic)
}
func (m *DenialService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DenialService.Merge(m, src)
}
func (m *DenialService) XXX_Size() int {
	return xxx_messageInfo_DenialService.Size(m)
}
func (m *DenialService) XXX_DiscardUnknown() {
	xxx_messageInfo_DenialService.DiscardUnknown(m)
}

var xxx_messageInfo_DenialService proto.InternalMessageInfo

func (m *DenialService) GetLock() string {
	if m != nil {
		return m.Lock
	}
	return ""
}

func (m *DenialService) GetHtlcSecret() string {
	if m != nil {
		return m.HtlcSecret
	}
	return ""
}

func (m *DenialService) GetProofMercleBranch() string {
	if m != nil {
		return m.ProofMercleBranch
	}
	return ""
}

func (m *DenialService) GetCreationHeight() uint64 {
	if m != nil {
		return m.CreationHeight
	}
	return 0
}

func (m *DenialService) GetLockExpire() uint64 {
	if m != nil {
		return m.LockExpire
	}
	return 0
}

func init() {
	proto.RegisterType((*DuplicateBlock)(nil), "discredit.DuplicateBlock")
	proto.RegisterType((*DenialService)(nil), "discredit.DenialService")
}

func init() { proto.RegisterFile("protos/discredit/discredit.proto", fileDescriptor_4d7938a26e59d63d) }

var fileDescriptor_4d7938a26e59d63d = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4f, 0xb3, 0x40,
	0x10, 0x86, 0xc3, 0xf7, 0x55, 0x93, 0x6e, 0x23, 0xda, 0xed, 0x41, 0x62, 0x8c, 0x92, 0x5e, 0xec,
	0x45, 0x48, 0xea, 0xd5, 0x78, 0x20, 0x98, 0xf4, 0xe2, 0x85, 0xde, 0xbc, 0x6c, 0x60, 0x99, 0xca,
	0x06, 0x64, 0x37, 0xb3, 0xa3, 0xf1, 0x57, 0xf8, 0x93, 0xfc, 0x6d, 0x86, 0xa9, 0xb5, 0x9a, 0x78,
	0x1b, 0x9e, 0xf7, 0x79, 0x81, 0xd9, 0x15, 0xb1, 0x43, 0x4b, 0xd6, 0xa7, 0xb5, 0xf1, 0x1a, 0xa1,
	0x36, 0xb4, 0x9f, 0x12, 0x8e, 0xe4, 0xf8, 0x1b, 0x9c, 0x9d, 0x7e, 0xc9, 0x79, 0x96, 0x92, 0x6d,
	0xa1, 0xaf, 0xab, 0xad, 0x33, 0x7f, 0x0f, 0x44, 0x98, 0xbf, 0xb8, 0xce, 0xe8, 0x92, 0x20, 0xeb,
	0xac, 0x6e, 0xe5, 0xad, 0x90, 0x1b, 0x83, 0x9e, 0x54, 0x35, 0x3c, 0xaa, 0x06, 0xca, 0x1a, 0x30,
	0x0a, 0xe2, 0x60, 0x31, 0x59, 0x86, 0xc9, 0xae, 0xce, 0x6e, 0x71, 0xc2, 0x26, 0xcf, 0x2b, 0xf6,
	0xe4, 0x9d, 0x98, 0x79, 0xd0, 0xb6, 0xaf, 0x7f, 0xd7, 0xff, 0xfd, 0x59, 0x9f, 0x6e, 0xd5, 0x1f,
	0xfd, 0xf9, 0x47, 0x20, 0x8e, 0x72, 0xe8, 0x4d, 0xd9, 0xad, 0x01, 0x5f, 0x8d, 0x06, 0x29, 0xc5,
	0x68, 0xc8, 0xf9, 0x0f, 0xc6, 0x05, 0xcf, 0xf2, 0x52, 0x4c, 0x1a, 0xea, 0xb4, 0xf2, 0xa0, 0x11,
	0x88, 0xdf, 0x3e, 0x2e, 0xc4, 0x80, 0xd6, 0x4c, 0x64, 0x22, 0x66, 0x0e, 0xad, 0xdd, 0xa8, 0x67,
	0x40, 0xdd, 0x81, 0xaa, 0xb0, 0xec, 0x75, 0x13, 0xfd, 0x67, 0x71, 0xca, 0xd1, 0x03, 0x27, 0x19,
	0x07, 0xf2, 0x4a, 0x1c, 0x6b, 0x84, 0x92, 0x8c, 0xed, 0x55, 0x03, 0xe6, 0xa9, 0xa1, 0x68, 0x14,
	0x07, 0x8b, 0x51, 0x11, 0xee, 0xf0, 0x8a, 0xe9, 0xf0, 0x65, 0xde, 0x0b, 0xde, 0x9c, 0x41, 0x88,
	0x0e, 0x58, 0x12, 0x03, 0xba, 0x67, 0x92, 0x5d, 0x3c, 0x9e, 0xf3, 0x92, 0xd7, 0x9e, 0xd0, 0xb4,
	0x90, 0x92, 0x77, 0x4b, 0xb7, 0xbf, 0x9b, 0xea, 0x90, 0x0f, 0xfe, 0xe6, 0x33, 0x00, 0x00, 0xff,
	0xff, 0xc8, 0xe5, 0xd9, 0xe0, 0xc0, 0x01, 0x00, 0x00,
}
